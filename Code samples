Assignment Sample

import countries.Country;
import countries.CountryRepository;

import java.util.Collection;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;

class Scratch {
    public static void main(String[] args) {

        var manager = new CountryManager();
        manager.printCountryNames();


    }

    public static class CountryManager {
        private List<Country>countries  = new CountryRepository().getAll();
        

        public void printCapitalsInAlphabetOrder(){

            countries.stream()
                    .map(Country::capital)
                    .sorted(Comparator.nullsLast(Comparator.naturalOrder()))
                    .forEach(System.out::println);

        }

        public void printDistinctRegionsOfCountriesWithZeroPopulation(){
            countries.stream()
                    .filter(country -> country.population() == 0)
                    .map(Country::region)
                    .distinct()
                    .forEach(System.out::println);
        }

        public void printCountryNames (){
            countries.stream()
                    .map(Country::name)
                    .forEach(System.out::println);
        }

        public long getTotalPopulationOfEuropeanCountries(){
            return countries.stream()
                    .filter(country ->country.region == Region.EUROPE
                    .mapToLong(Country::population)
                    .sum()

        }
    }
}








findFirst()
boxed()
max(Comparator.comparingLong(Country::population)
all/anyMatch(country ->country.timezone().size() == 0)
average()
count()
summaryStatistics()

manager.getMaxPopulation().ifPresent(sout)





